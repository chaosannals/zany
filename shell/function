#!/bin/bash

function find_pid() {
    local action="ps -ef | grep '$1' | grep -v grep | awk '{print \$2}'"
    eval $action
}

function kill_pid() {
    for pid in $*
    do
        kill -9 $pid
    done
}

function user_cmd() {
    local action="runuser $1 -s /bin/bash -c '$2'"
    eval $action
}

function get_now() {
    if [ $1 == 'timestamp' ]; then
        date +%s
    elif [ $1 == 'today' ]; then
        date '+%Y-%m-%d'
    else
        date '+%Y-%m-%d %H:%M:%S'
    fi
}

function get_today() {
    date '+%Y-%m-%d'
}

function day_ago() {
    if [ $2 == 'timestamp' ]; then
        d=$(date -d "$1 day ago" '+%Y-%m-%d')
        date -d $d '+%s'
    else
        date -d "$1 day ago" '+%Y-%m-%d'
    fi
}

function get_timestamp() {
    date -d "$1" +%s
}

function get_mtime() {
    ls --full-time $1 | awk '{print $6}'
}

function get_atime() {
    ls --time atime --full-time $1 | awk '{print $6}'
}

function get_suffix() {
    local suffix=${1##*.}
    if [ $suffix != $1 ]; then
        echo $suffix
    fi
}

function find_at() {
    local mint=$(get_timestamp $2)
    local maxt=$(get_timestamp $3)

    for tail in $(ls $1)
    do
        local p="$1/$tail"
        if [ -f $p ]; then
            local mt=$(get_mtime $p)
            local t=$(get_timestamp $mt)
            if [ $maxt -gt $t -a $mint -lt $t ]; then
                echo "$p"
            fi
        fi
        if [ -d $p ]; then
            find_at $p $2 $3
        fi
    done
}

function add() {
    if [ "$2" == '' ]; then
        echo $(($1 + 1))
    else
        echo $(($1 + $2))
    fi
}

function echo_over() {
    echo -en "$1\r"
}

function next_at() {
    tomorrow=$(date -d "-1 day ago" '+%Y-%m-%d')
    e=$(date -d $tomorrow '+%s')
    s=$(date +%s)
    if [ $1 != '' ]; then
        echo $(($e - $s + $1))
    else
        echo $(($e - $s))
    fi
}
